/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:318975:
    appc.background(230);
} //_CODE_:window1:318975:

public void fps_clicked(GCheckbox source, GEvent event) { //_CODE_:fpsOn:628265:
    fpsCounter = source.isSelected();
} //_CODE_:fpsOn:628265:

public void imgTogButton1_click1(GImageToggleButton source, GEvent event) { //_CODE_:imgTogButton1:362552:
  println("imgTogButton1 - GImageToggleButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgTogButton1:362552:

public void imgTogButton2_click1(GImageToggleButton source, GEvent event) { //_CODE_:imgTogButton2:235465:
  println("imgTogButton2 - GImageToggleButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgTogButton2:235465:

public void mouseRadiusChange(GSlider source, GEvent event) { //_CODE_:mouseRadiusSlider:923919:
    mouseRadius = source.getValueF();
} //_CODE_:mouseRadiusSlider:923919:

public void mousePowerChange(GSlider source, GEvent event) { //_CODE_:mousePowerSlider:862956:
    mousePower = source.getValueF();
} //_CODE_:mousePowerSlider:862956:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Options", 512, 0, 240, 512, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  fpsOn = new GCheckbox(window1, 116, 4, 120, 20);
  fpsOn.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  fpsOn.setText("Fps Counter");
  fpsOn.setOpaque(false);
  fpsOn.addEventHandler(this, "fps_clicked");
  imgTogButton1 = new GImageToggleButton(window1, 1, 2);
  imgTogButton1.addEventHandler(this, "imgTogButton1_click1");
  imgTogButton2 = new GImageToggleButton(window1, 1, 54);
  imgTogButton2.addEventHandler(this, "imgTogButton2_click1");
  mouseRadiusSlider = new GSlider(window1, 124, 33, 100, 40, 10.0);
  mouseRadiusSlider.setLimits(10.0, 0.0, 20.0);
  mouseRadiusSlider.setNumberFormat(G4P.DECIMAL, 2);
  mouseRadiusSlider.setOpaque(false);
  mouseRadiusSlider.addEventHandler(this, "mouseRadiusChange");
  mousePowerSlider = new GSlider(window1, 123, 85, 100, 40, 10.0);
  mousePowerSlider.setLimits(15.0, -20.0, 20.0);
  mousePowerSlider.setNumberFormat(G4P.DECIMAL, 2);
  mousePowerSlider.setOpaque(false);
  mousePowerSlider.addEventHandler(this, "mousePowerChange");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GCheckbox fpsOn; 
GImageToggleButton imgTogButton1; 
GImageToggleButton imgTogButton2; 
GSlider mouseRadiusSlider; 
GSlider mousePowerSlider; 
