/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here
 } //_CODE_:button1:12356:

 * Do not rename this tab!
 * =========================================================
 */

synchronized public void
win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:318975:
    appc.background(230);
} //_CODE_:window1:318975:

public

void fps_clicked(GCheckbox source, GEvent event) { //_CODE_:fpsOn:628265:
    fpsCounter = source.isSelected();
} //_CODE_:fpsOn:628265:

public

void changeToolAddFluid(
    GImageToggleButton source,
    GEvent event
) { //_CODE_:toolAddFluid:362552:
    changeMouseMode(MouseMode.ADD_FLUID, source);
} //_CODE_:toolAddFluid:362552:

public

void changeToolRemoveFluid(
    GImageToggleButton source,
    GEvent event
) { //_CODE_:toolRemoveFluid:235465:
    changeMouseMode(MouseMode.REMOVE_FLUID, source);
} //_CODE_:toolRemoveFluid:235465:

public

void mousePowerChange(
    GSlider source,
    GEvent event
) { //_CODE_:mousePowerSlider:862956:
    mousePower = source.getValueF();
} //_CODE_:mousePowerSlider:862956:

public

void changeToolRepel(
    GImageToggleButton source,
    GEvent event
) { //_CODE_:toolRepel:256301:
    changeMouseMode(MouseMode.REPEL, source);
} //_CODE_:toolRepel:256301:

public

void changeToolAttract(
    GImageToggleButton source,
    GEvent event
) { //_CODE_:toolAttract:504153:
    changeMouseMode(MouseMode.ATTRACT, source);
} //_CODE_:toolAttract:504153:

public

void changeCenterMass(
    GButton source,
    GEvent event
) { //_CODE_:centerMassButton:695002:
    settingCMass = true;
} //_CODE_:centerMassButton:695002:

public

void addSolid(GButton source, GEvent event) { //_CODE_:addSolidButton:884517:
    queueSolid = true;
    changeMouseMode(MouseMode.NONE, toolSolid);
    toolSolid.setState(0);
} //_CODE_:addSolidButton:884517:

public

void changeToolSolid(
    GImageToggleButton source,
    GEvent event
) { //_CODE_:toolSolid:641667:
    changeMouseMode(MouseMode.SOLID, source);
} //_CODE_:toolSolid:641667:

// Create all the GUI controls.
// autogenerated do not edit
public

void createGUI() {
    G4P.messagesEnabled(false);
    G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
    G4P.setMouseOverEnabled(false);
    surface.setTitle("Sketch Window");
    window1 = GWindow.getWindow(this, "Options", 10, 120, 320, 600, JAVA2D);
    window1.noLoop();
    window1.setActionOnClose(G4P.KEEP_OPEN);
    window1.addDrawHandler(this, "win_draw1");
    fpsOn = new GCheckbox(window1, 60, 10, 120, 20);
    fpsOn.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
    fpsOn.setText("Fps Counter");
    fpsOn.setOpaque(false);
    fpsOn.addEventHandler(this, "fps_clicked");
    toolAddFluid =
        new GImageToggleButton(window1, 10, 10, "paint-bucket-icon.png", 2, 1);
    toolAddFluid.addEventHandler(this, "changeToolAddFluid");
    toolRemoveFluid =
        new GImageToggleButton(window1, 10, 60, "sponge-icon.png", 2, 1);
    toolRemoveFluid.addEventHandler(this, "changeToolRemoveFluid");
    mousePowerSlider = new GSlider(window1, 60, 40, 100, 40, 10.0);
    mousePowerSlider.setLimits(15.0, 0.0, 30.0);
    mousePowerSlider.setNumberFormat(G4P.DECIMAL, 2);
    mousePowerSlider.setOpaque(false);
    mousePowerSlider.addEventHandler(this, "mousePowerChange");
    toolRepel =
        new GImageToggleButton(window1, 10, 160, "repel-icon.png", 2, 1);
    toolRepel.addEventHandler(this, "changeToolRepel");
    toolAttract =
        new GImageToggleButton(window1, 10, 110, "attract-icon.png", 2, 1);
    toolAttract.addEventHandler(this, "changeToolAttract");
    label1 = new GLabel(window1, 60, 30, 80, 20);
    label1.setText("Mouse Power");
    label1.setOpaque(false);
    addFluidPanel = new GPanel(window1, 60, 130, 250, 460, "Add Fluid");
    addFluidPanel.setCollapsible(false);
    addFluidPanel.setDraggable(false);
    addFluidPanel.setText("Add Fluid");
    addFluidPanel.setLocalColorScheme(GCScheme.CYAN_SCHEME);
    addFluidPanel.setOpaque(true);
    restDensitySlider = new GSlider(window1, 10, 90, 100, 40, 10.0);
    restDensitySlider.setShowValue(true);
    restDensitySlider.setLimits(3.0, 0.0, 10.0);
    restDensitySlider.setNumberFormat(G4P.DECIMAL, 2);
    restDensitySlider.setOpaque(false);
    label2 = new GLabel(window1, 10, 75, 80, 20);
    label2.setText("Rest Density");
    label2.setOpaque(false);
    stiffnessSlider = new GSlider(window1, 10, 150, 100, 40, 10.0);
    stiffnessSlider.setShowValue(true);
    stiffnessSlider.setLimits(10.0, 0.0, 25.0);
    stiffnessSlider.setNumberFormat(G4P.DECIMAL, 2);
    stiffnessSlider.setOpaque(false);
    label4 = new GLabel(window1, 10, 135, 80, 20);
    label4.setText("Stiffness");
    label4.setOpaque(false);
    label5 = new GLabel(window1, 10, 195, 80, 20);
    label5.setText("Anti-clumping");
    label5.setOpaque(false);
    nearStiffnessSlider = new GSlider(window1, 10, 210, 100, 40, 10.0);
    nearStiffnessSlider.setShowValue(true);
    nearStiffnessSlider.setLimits(5.0, 0.0, 25.0);
    nearStiffnessSlider.setNumberFormat(G4P.DECIMAL, 2);
    nearStiffnessSlider.setOpaque(false);
    label6 = new GLabel(window1, 10, 255, 80, 20);
    label6.setText("Viscosity");
    label6.setOpaque(false);
    viscositySlider = new GSlider(window1, 10, 270, 100, 40, 10.0);
    viscositySlider.setShowValue(true);
    viscositySlider.setLimits(3.0, 0.0, 20.0);
    viscositySlider.setNumberFormat(G4P.DECIMAL, 2);
    viscositySlider.setOpaque(false);
    label7 = new GLabel(window1, 10, 310, 80, 20);
    label7.setText("Color");
    label7.setOpaque(false);
    massSlider = new GSlider(window1, 10, 40, 100, 40, 10.0);
    massSlider.setShowValue(true);
    massSlider.setLimits(1.0, 0.0, 10.0);
    massSlider.setNumberFormat(G4P.DECIMAL, 2);
    massSlider.setOpaque(false);
    label3 = new GLabel(window1, 10, 25, 80, 20);
    label3.setText("Mass");
    label3.setOpaque(false);
    SLSlider = new GSlider2D(window1, 10, 330, 80, 80);
    SLSlider.setLimitsX(50.0, 0.0, 100.0);
    SLSlider.setLimitsY(50.0, 0.0, 100.0);
    SLSlider.setNumberFormat(G4P.DECIMAL, 2);
    SLSlider.setOpaque(true);
    label9 = new GLabel(window1, 120, 25, 100, 20);
    label9.setText("Velocity");
    label9.setOpaque(false);
    velDirectionSlider = new GKnob(window1, 120, 40, 60, 60, 0.8);
    velDirectionSlider.setTurnRange(0, 0);
    velDirectionSlider.setTurnMode(GKnob.CTRL_ANGULAR);
    velDirectionSlider.setShowArcOnly(false);
    velDirectionSlider.setOverArcOnly(false);
    velDirectionSlider.setIncludeOverBezel(false);
    velDirectionSlider.setShowTrack(false);
    velDirectionSlider.setLimits(0.0, 0.0, 6.2831855);
    velDirectionSlider.setShowTicks(true);
    velDirectionSlider.setOpaque(false);
    velMagSlider = new GSlider(window1, 120, 90, 100, 40, 10.0);
    velMagSlider.setLimits(0.0, 0.0, 50.0);
    velMagSlider.setNumberFormat(G4P.DECIMAL, 2);
    velMagSlider.setOpaque(false);
    HSlider = new GSlider(window1, 10, 410, 100, 40, 10.0);
    HSlider.setLimits(0.5, 0.0, 360.0);
    HSlider.setNumberFormat(G4P.DECIMAL, 2);
    HSlider.setOpaque(false);
    addFluidPanel.addControl(restDensitySlider);
    addFluidPanel.addControl(label2);
    addFluidPanel.addControl(stiffnessSlider);
    addFluidPanel.addControl(label4);
    addFluidPanel.addControl(label5);
    addFluidPanel.addControl(nearStiffnessSlider);
    addFluidPanel.addControl(label6);
    addFluidPanel.addControl(viscositySlider);
    addFluidPanel.addControl(label7);
    addFluidPanel.addControl(massSlider);
    addFluidPanel.addControl(label3);
    addFluidPanel.addControl(SLSlider);
    addFluidPanel.addControl(label9);
    addFluidPanel.addControl(velDirectionSlider);
    addFluidPanel.addControl(velMagSlider);
    addFluidPanel.addControl(HSlider);
    speedSlider = new GSlider(window1, 60, 90, 100, 40, 10.0);
    speedSlider.setLimits(0.5, 0.0, 1.0);
    speedSlider.setNumberFormat(G4P.DECIMAL, 2);
    speedSlider.setOpaque(false);
    label8 = new GLabel(window1, 60, 80, 80, 20);
    label8.setText("Speed");
    label8.setOpaque(false);
    addSolidPanel = new GPanel(window1, 60, 130, 250, 460, "Add Solid");
    addSolidPanel.setDraggable(false);
    addSolidPanel.setText("Add Solid");
    addSolidPanel.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
    addSolidPanel.setOpaque(true);
    label10 = new GLabel(window1, 10, 35, 80, 20);
    label10.setText("Mass");
    label10.setOpaque(false);
    mSolidSlider = new GSlider(window1, 10, 50, 100, 40, 10.0);
    mSolidSlider.setShowValue(true);
    mSolidSlider.setLimits(50.0, 0.0, 500.0);
    mSolidSlider.setNumberFormat(G4P.DECIMAL, 2);
    mSolidSlider.setOpaque(false);
    centerMassButton = new GButton(window1, 10, 170, 80, 30);
    centerMassButton.setText("Set Center of Mass");
    centerMassButton.addEventHandler(this, "changeCenterMass");
    fixedSolid = new GCheckbox(window1, 10, 90, 120, 20);
    fixedSolid.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
    fixedSolid.setText("fixed?");
    fixedSolid.setOpaque(false);
    addSolidButton = new GButton(window1, 10, 210, 80, 30);
    addSolidButton.setText("Finish");
    addSolidButton.addEventHandler(this, "addSolid");
    frictionSlider = new GSlider(window1, 10, 130, 100, 40, 10.0);
    frictionSlider.setLimits(0.5, 0.0, 1.0);
    frictionSlider.setNumberFormat(G4P.DECIMAL, 2);
    frictionSlider.setOpaque(false);
    label11 = new GLabel(window1, 10, 115, 80, 20);
    label11.setText("Friction");
    label11.setOpaque(false);
    addSolidPanel.addControl(label10);
    addSolidPanel.addControl(mSolidSlider);
    addSolidPanel.addControl(centerMassButton);
    addSolidPanel.addControl(fixedSolid);
    addSolidPanel.addControl(addSolidButton);
    addSolidPanel.addControl(frictionSlider);
    addSolidPanel.addControl(label11);
    toolSolid =
        new GImageToggleButton(window1, 10, 210, "pen-tool-icon.png", 2, 1);
    toolSolid.addEventHandler(this, "changeToolSolid");
    window1.loop();
}

// Variable declarations
// autogenerated do not edit
GWindow window1;
GCheckbox fpsOn;
GImageToggleButton toolAddFluid;
GImageToggleButton toolRemoveFluid;
GSlider mousePowerSlider;
GImageToggleButton toolRepel;
GImageToggleButton toolAttract;
GLabel label1;
GPanel addFluidPanel;
GSlider restDensitySlider;
GLabel label2;
GSlider stiffnessSlider;
GLabel label4;
GLabel label5;
GSlider nearStiffnessSlider;
GLabel label6;
GSlider viscositySlider;
GLabel label7;
GSlider massSlider;
GLabel label3;
GSlider2D SLSlider;
GLabel label9;
GKnob velDirectionSlider;
GSlider velMagSlider;
GSlider HSlider;
GSlider speedSlider;
GLabel label8;
GPanel addSolidPanel;
GLabel label10;
GSlider mSolidSlider;
GButton centerMassButton;
GCheckbox fixedSolid;
GButton addSolidButton;
GSlider frictionSlider;
GLabel label11;
GImageToggleButton toolSolid;
